<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.stockapp</groupId>
    <artifactId>StockOverviewApp</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <javafx.version>17.0.2</javafx.version>
    </properties>

    <dependencies>
        <!-- JavaFX dependencies -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- JFreeChart for candlestick chart rendering -->
        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.5.3</version>
        </dependency>

        <!-- Gson for JSON parsing -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10</version>
        </dependency>

        <!-- Apache HttpClient for API calls -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>5.4</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

// MainApp.java file content updated to integrate StockChart
import javafx.application.Application;
import javafx.embed.swing.SwingNode;
import javafx.scene.Scene;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;

public class MainApp extends Application {

    @Override
    public void start(Stage primaryStage) {
        // Create the root layout
        GridPane root = new GridPane();
        StockChart stockChart = new StockChart();

        // Add candlestick charts to the grid
        for (int row = 0; row < 3; row++) {
            for (int col = 0; col < 3; col++) {
                // Create a SwingNode to host the JFreeChart panel
                SwingNode swingNode = new SwingNode();
                swingNode.setContent(stockChart.createChartPanel("Stock " + (row * 3 + col + 1), stockChart.createDataset()));

                // Add SwingNode to GridPane
                GridPane.setRowIndex(swingNode, row);
                GridPane.setColumnIndex(swingNode, col);
                root.getChildren().add(swingNode);
            }
        }

        // Set up the scene and stage
        Scene scene = new Scene(root, 1200, 800);
        primaryStage.setTitle("Stock Overview - Real-time Candlestick Charts");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}

// StockChart.java file content added to handle candlestick chart rendering
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.data.time.Minute;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.OHLCDataset;
import javax.swing.*;
import java.awt.*;

public class StockChart {

    public JPanel createChartPanel(String stockName, OHLCDataset dataset) {
        // Create the candlestick chart
        JFreeChart chart = ChartFactory.createCandlestickChart(
                stockName,
                "Time",
                "Price",
                dataset,
                false
        );

        // Customize the chart
        XYPlot plot = (XYPlot) chart.getPlot();
        plot.setDomainPannable(true);
        plot.setRangePannable(true);

        DateAxis axis = (DateAxis) plot.getDomainAxis();
        axis.setDateFormatOverride(new java.text.SimpleDateFormat("HH:mm"));

        // Create a panel and add the chart
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new Dimension(400, 300));

        return chartPanel;
    }

    public OHLCDataset createDataset() {
        TimeSeries series = new TimeSeries("Candlestick");

        // Sample data (replace with real-time data)
        series.add(new Minute(0, 0, 1, 1, 2025), 100);
        series.add(new Minute(15, 0, 1, 1, 2025), 105);
        series.add(new Minute(30, 0, 1, 1, 2025), 102);
        series.add(new Minute(45, 0, 1, 1, 2025), 110);
        series.add(new Minute(0, 1, 1, 1, 2025), 108);

        return new TimeSeriesCollection(series);
    }
}
